{"ast":null,"code":"import GenericServices from \"./GenericServices\";\n\nclass AuthServices extends GenericServices {\n  constructor() {\n    super();\n\n    this.login = (email, password) => {\n      return new Promise((resolve, reject) => {\n        this.post(\"/login\", {\n          email,\n          password\n        }).then(token => {\n          localStorage.setItem(\"token\", token);\n          resolve(token);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    };\n\n    this.register = data => this.post(\"/signUp\", data);\n\n    this.logOut = () => {\n      localStorage.clear();\n      window.location.reload();\n      window.location.href = \"/login\";\n    };\n\n    this.isLogged = () => {\n      return true; // localStorage.getItem(\"token\")? true : false ;\n    };\n  }\n\n}\n\nlet authServices = new AuthServices();\nexport default authServices;","map":{"version":3,"names":["GenericServices","AuthServices","constructor","login","email","password","Promise","resolve","reject","post","then","token","localStorage","setItem","catch","err","register","data","logOut","clear","window","location","reload","href","isLogged","authServices"],"sources":["C:/Users/hp/Desktop/ReactApplicationDemo/reactapplication/src/services/AuthServices.js"],"sourcesContent":["import GenericServices from \"./GenericServices\"\r\n\r\nclass AuthServices extends GenericServices{\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    login = (email ,password) => {\r\n        return new Promise ((resolve,reject)=>{\r\n            this.post(\"/login\",{email, password}).then((token)=>{\r\n                localStorage.setItem(\"token\",token)\r\n                resolve(token);\r\n            }).catch((err)=>{\r\n                reject(err);\r\n            })\r\n        })\r\n    };\r\n\r\n    register = (data) =>this.post(\"/signUp\",data);\r\n\r\n    logOut = ()=>{\r\n        localStorage.clear();\r\n        window.location.reload();\r\n        window.location.href=\"/login\";\r\n    }\r\n    \r\n    isLogged = ()=>{\r\n        return true \r\n        // localStorage.getItem(\"token\")? true : false ;\r\n    }\r\n\r\n}\r\n\r\nlet authServices = new AuthServices();\r\nexport default authServices;"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,YAAN,SAA2BD,eAA3B,CAA0C;EACtCE,WAAW,GAAE;IACT;;IADS,KAIbC,KAJa,GAIL,CAACC,KAAD,EAAQC,QAAR,KAAqB;MACzB,OAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAASC,MAAT,KAAkB;QAClC,KAAKC,IAAL,CAAU,QAAV,EAAmB;UAACL,KAAD;UAAQC;QAAR,CAAnB,EAAsCK,IAAtC,CAA4CC,KAAD,IAAS;UAChDC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,KAA7B;UACAJ,OAAO,CAACI,KAAD,CAAP;QACH,CAHD,EAGGG,KAHH,CAGUC,GAAD,IAAO;UACZP,MAAM,CAACO,GAAD,CAAN;QACH,CALD;MAMH,CAPM,CAAP;IAQH,CAbY;;IAAA,KAebC,QAfa,GAeDC,IAAD,IAAS,KAAKR,IAAL,CAAU,SAAV,EAAoBQ,IAApB,CAfP;;IAAA,KAiBbC,MAjBa,GAiBJ,MAAI;MACTN,YAAY,CAACO,KAAb;MACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;MACAF,MAAM,CAACC,QAAP,CAAgBE,IAAhB,GAAqB,QAArB;IACH,CArBY;;IAAA,KAuBbC,QAvBa,GAuBF,MAAI;MACX,OAAO,IAAP,CADW,CAEX;IACH,CA1BY;EAEZ;;AAHqC;;AA+B1C,IAAIC,YAAY,GAAG,IAAIxB,YAAJ,EAAnB;AACA,eAAewB,YAAf"},"metadata":{},"sourceType":"module"}