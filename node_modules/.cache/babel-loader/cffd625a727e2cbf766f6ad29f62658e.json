{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = _ref => {\n  _s();\n\n  let {\n    City\n  } = _ref;\n  const [weatherData, setWeatherData] = useState([]);\n  let detail = [{\n    \"city\": \"Lahore\",\n    \"lat\": 31.5204,\n    \"lon\": 74.3587\n  }, {\n    \"city\": \"Karachi\",\n    \"lat\": 24.8607,\n    \"lon\": 67.0011\n  }, {\n    \"city\": \"Multan\",\n    \"lat\": 30.1575,\n    \"lon\": 71.5249\n  }, {\n    \"city\": \"Islamabad\",\n    \"lat\": 33.6844,\n    \"lon\": 73.0479\n  }, {\n    \"city\": \"Mian Channu\",\n    \"lat\": 30.4390,\n    \"lon\": 72.3552\n  }];\n\n  const fetchData = () => {\n    let data = detail.find(val => val.city === City);\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + data.lat + \"&lon=\" + data.lon + \"&units=metric&appid=bafb9353ed5fd0e37e467321085b9d27\").then(res => {\n      console.log(res.data);\n      setWeatherData(res.data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  useEffect(fetchData, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Weather, \"/36A0rB4wtg60MCyp8px/YO+bBg=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Weather","City","weatherData","setWeatherData","detail","fetchData","data","find","val","city","get","lat","lon","then","res","console","log","catch","err","message"],"sources":["C:/Users/hp/Desktop/ReactApplicationDemo/BasicReactApplication/src/components/WeatherUpdates/Weather.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nconst Weather = ({City}) => {\r\n\r\n    const [weatherData,setWeatherData] = useState([]);\r\n    let detail = [{\r\n        \"city\" : \"Lahore\",\r\n        \"lat\": 31.5204 , \r\n        \"lon\": 74.3587\r\n        \r\n    },{\r\n        \"city\" : \"Karachi\",\r\n        \"lat\": 24.8607, \r\n        \"lon\": 67.0011\r\n        \r\n    },{\r\n        \"city\" : \"Multan\",\r\n        \"lat\": 30.1575, \r\n        \"lon\": 71.5249\r\n        \r\n    },{\r\n        \"city\" : \"Islamabad\",\r\n        \"lat\": 33.6844, \r\n        \"lon\": 73.0479\r\n        \r\n    },{\r\n        \"city\" : \"Mian Channu\",\r\n        \"lat\": 30.4390, \r\n        \"lon\": 72.3552\r\n        \r\n    }]\r\n\r\n    const fetchData = ()=>{\r\n        let data = detail.find(val=>val.city === City); \r\n        axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+data.lat+\"&lon=\"+data.lon+\"&units=metric&appid=bafb9353ed5fd0e37e467321085b9d27\").\r\n        then((res)=>{\r\n            console.log(res.data);\r\n            setWeatherData(res.data);\r\n        }).catch((err)=>{\r\n            console.log(err.message);\r\n        })\r\n    } \r\n    useEffect(fetchData,[]);\r\n    return ( <>\r\n\r\n{/*     \r\n        { !weatherData.name  ? <h1 style={{color:\"white\"}}>Loading data.....</h1> : \r\n        <>\r\n<TableContainer component={Paper} style={{marginTop:\"10px\"}}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{weatherData.name}</TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            <TableRow\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Weather\r\n              </TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n                <TableCell align=\"right\">{weatherData.weather[0].description}</TableCell>\r\n            </TableRow>\r\n            <TableRow\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n               Temperature\r\n              </TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n              <TableCell align=\"right\">{weatherData.main.temp} C</TableCell>\r\n            </TableRow>\r\n            <TableRow\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Max-Temperature\r\n              </TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n                <TableCell align=\"right\">{weatherData.main.temp_max } C</TableCell>\r\n            </TableRow>    \r\n            <TableRow\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n              Humidity\r\n              </TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n              <TableCell align=\"right\">{weatherData.main.humidity}</TableCell>\r\n            </TableRow>\r\n            <TableRow\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n               Wind Speed\r\n              </TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n              <TableCell align=\"right\">mph</TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n        </>  } */}\r\n\r\n             </> );\r\n}\r\n \r\nexport default Weather;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAGA,MAAMC,OAAO,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAExB,MAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,EAAD,CAA7C;EACA,IAAIa,MAAM,GAAG,CAAC;IACV,QAAS,QADC;IAEV,OAAO,OAFG;IAGV,OAAO;EAHG,CAAD,EAKX;IACE,QAAS,SADX;IAEE,OAAO,OAFT;IAGE,OAAO;EAHT,CALW,EAUX;IACE,QAAS,QADX;IAEE,OAAO,OAFT;IAGE,OAAO;EAHT,CAVW,EAeX;IACE,QAAS,WADX;IAEE,OAAO,OAFT;IAGE,OAAO;EAHT,CAfW,EAoBX;IACE,QAAS,aADX;IAEE,OAAO,OAFT;IAGE,OAAO;EAHT,CApBW,CAAb;;EA2BA,MAAMC,SAAS,GAAG,MAAI;IAClB,IAAIC,IAAI,GAAGF,MAAM,CAACG,IAAP,CAAYC,GAAG,IAAEA,GAAG,CAACC,IAAJ,KAAaR,IAA9B,CAAX;IACAT,KAAK,CAACkB,GAAN,CAAU,yDAAuDJ,IAAI,CAACK,GAA5D,GAAgE,OAAhE,GAAwEL,IAAI,CAACM,GAA7E,GAAiF,sDAA3F,EACAC,IADA,CACMC,GAAD,IAAO;MACRC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACR,IAAhB;MACAH,cAAc,CAACW,GAAG,CAACR,IAAL,CAAd;IACH,CAJD,EAIGW,KAJH,CAIUC,GAAD,IAAO;MACZH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;IACH,CAND;EAOH,CATD;;EAUA7B,SAAS,CAACe,SAAD,EAAW,EAAX,CAAT;EACA,oBAAS,qCAAT;AAkEH,CA3GD;;GAAML,O;;KAAAA,O;AA6GN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}